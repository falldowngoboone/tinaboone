$baby-bear: 485px;
$mama-bear: 767px;
$papa-bear: 1100px;

$padding: 10px;
$gutter-width: 2%;
$columns: 12;

/* Global
================================ */

.grid-container {
	padding-left: $padding;
	padding-right: $padding;
	margin-left: auto;
	margin-right: auto;

	@media (min-width: $papa-bear) {
		max-width: $papa-bear;
	}
}

img {
	width: 100%;
}


/* Media Queries
================================ */

@media (min-width: 1px) and (max-width: $mama-bear) {
	.grid-container > [class^="grid-"] {
		padding-top: $padding / 2;
		padding-bottom: $padding / 2;
	}
	.hide-mobile {
		display: none;
	}
}

@media (min-width: $mama-bear) {


	/* Columns
	=========================================== */

	.grid-container > [class^="grid-"] {
		float: left;
		min-height: 1px;
		padding-left: $padding;
		padding-right: $padding;
		margin-left: $gutter-width;

		&:first-child {
			margin-left: 0;
		}
		&:last-child {
			float: right;
		}
	}


	// Pixel to percentage formula:
	// target (total width in px) / context (1000 px for this particular layout) = result (in %)

	@mixin build-grid($gutter-width, $columns) {
		$col-width: (100-(($columns - 1) * $gutter-width)) / $columns;

		@for $i from 1 through $columns {
			.grid-#{$i} {
				width: ($i * $col-width) + (($i - 1) * ($gutter-width));
			}
		}

		@for $i from 1 through $columns - 1 {
			.offset-#{$i} {
				margin-left: ($i * $col-width) + (($i) * ($gutter-width))
			}
		}
	}

	@include build-grid($gutter-width, $columns);


	/* Clearfix
	================================ */

	.group:after,
	.grid-container:after {
	  content: " ";
	  display: table;
	  clear: both;
	}
}
